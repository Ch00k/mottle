x-image: &image
  image: mottle:latest

x-env: &env
  PYTHONPATH: /app/mounted
  ALLOWED_HOSTS: 127.0.0.1,localhost,web
  CSRF_TRUSTED_ORIGINS: http://127.0.0.1,http://localhost
  SECRET_KEY: ${SECRET_KEY:-foobar}
  DATABASE_FILE: /app/database/db.sqlite3
  DATABASE_FILE_TASKS: /app/database/tasks.sqlite3
  SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
  SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
  SPOTIFY_REDIRECT_URI: ${SPOTIFY_REDIRECT_URI:-http://127.0.0.1:65534/callback/}
  SPOTIFY_TOKEN_ENCRYPTION_KEYS: ${SPOTIFY_TOKEN_ENCRYPTION_KEYS}
  MAILERSEND_API_TOKEN: ${MAILERSEND_API_TOKEN}
  MAIL_FROM_EMAIL: ${MAIL_FROM_EMAIL}
  MAIL_FROM_NAME: ${MAIL_FROM_NAME}
  OPENAI_API_KEY: ${OPENAI_API_KEY}
  OPENAI_IMAGES_DUMP_DIR: /images_dump/
  BRIGHTDATA_PROXY_URL: ${BRIGHTDATA_PROXY_URL}
  EVENTS_ENABLED_FOR_SPOTIFY_USER_IDS: ${EVENTS_ENABLED_FOR_SPOTIFY_USER_IDS}

name: mottle_dev
services:
  migrate:
    <<:
      - *image
    environment:
      <<: *env
    command: bash -c "./manage.py migrate --database default && ./manage.py migrate --database tasks"
    volumes:
      - ./runtime_data/database:/app/database
      - .:/app/mounted
    working_dir: /app/mounted

  web:
    <<:
      - *image
    environment:
      <<: *env
    command: uvicorn mottle.asgi:application --host 0.0.0.0 --port 65534 --log-level debug --loop uvloop --http httptools --no-access-log
    volumes:
      - ./runtime_data/database:/app/database
      - .:/app/mounted
    working_dir: /app/mounted
    ports:
      - 127.0.0.1:65534:65534
    depends_on:
      migrate:
        condition: service_completed_successfully

  scheduler:
    <<:
      - *image
    environment:
      <<: *env
      DJANGO_SETTINGS_MODULE: mottle.settings
    command: python ./scheduler/run.py 0.0.0.0 10001
    volumes:
      - ./runtime_data/database:/app/database
      - .:/app/mounted
    working_dir: /app/mounted
    depends_on:
      migrate:
        condition: service_completed_successfully

  taskrunner_default:
    <<:
      - *image
    environment:
      <<: *env
      DJANGO_SETTINGS_MODULE: mottle.settings
      Q_CLUSTER_NAME: default
      PROMETHEUS_MULTIPROC_DIR: /tmp/prometheus_multiproc_dir
    command: python ./taskrunner/run.py 0.0.0.0 10002
    volumes:
      - ./runtime_data/database:/app/database
      - ./runtime_data/images_dump:/images_dump
      - .:/app/mounted
    working_dir: /app/mounted
    depends_on:
      migrate:
        condition: service_completed_successfully

  taskrunner_long_running:
    <<:
      - *image
    environment:
      <<: *env
      DJANGO_SETTINGS_MODULE: mottle.settings
      Q_CLUSTER_NAME: long_running
      PROMETHEUS_MULTIPROC_DIR: /tmp/prometheus_multiproc_dir
    command: python ./taskrunner/run.py 0.0.0.0 10003
    volumes:
      - ./runtime_data/database:/app/database
      - .:/app/mounted
    working_dir: /app/mounted
    depends_on:
      migrate:
        condition: service_completed_successfully

  prometheus:
    image: prom/prometheus
    logging:
      driver: none
    user: 65534:65534
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --log.level=warn
      - --log.format=json
    volumes:
      - ./runtime_data/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./runtime_data/prometheus/data:/prometheus
    ports:
      - 127.0.0.1:9797:9090

  grafana:
    image: grafana/grafana
    logging:
      driver: none
    user: 65534:65534
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_LOG_MODE: console
      GF_LOG_LEVEL: warn
      GF_LOG_FORMAT: json
      GF_LOG_CONSOLE_LEVEL: warn
      GF_LOG_CONSOLE_FORMAT: json
    volumes:
      - ./runtime_data/grafana:/var/lib/grafana
    ports:
      - 127.0.0.1:3737:3000
