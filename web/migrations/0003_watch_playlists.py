# Generated by Django 5.0.4 on 2024-05-03 16:34

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("web", "0002_encrypt_tokens"),
    ]

    operations = [
        migrations.CreateModel(
            name="SpotifyUser",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("spotify_id", models.CharField(max_length=32, unique=True)),
                ("display_name", models.CharField(max_length=48, null=True)),
                ("email", models.EmailField(max_length=254, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("spotify_id", models.CharField(max_length=32, unique=True)),
                ("watched_playlists", models.ManyToManyField(to="web.playlist")),
                (
                    "spotify_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlists",
                        to="web.spotifyuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PlaylistUpdate",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("albums_added", models.JSONField(null=True)),
                ("albums_removed", models.JSONField(null=True)),
                ("tracks_added", models.JSONField(null=True)),
                ("tracks_removed", models.JSONField(null=True)),
                ("update_hash", models.CharField(max_length=64, unique=True)),
                ("is_notified_of", models.BooleanField(default=False)),
                ("is_accepted", models.BooleanField(default=None, null=True)),
                (
                    "is_overridden_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overrides",
                        to="web.playlistupdate",
                    ),
                ),
                (
                    "source_artist",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="web.playlist"),
                ),
                (
                    "source_playlist",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="provided_updates",
                        to="web.playlist",
                    ),
                ),
                (
                    "target_playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="updates", to="web.playlist"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
