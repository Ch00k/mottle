# Generated by Django 5.0.3 on 2024-04-22 18:22


from django.apps.registry import Apps
from django.db import migrations, models
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

import web.models


def unset_state_and_redirect_uri(apps: Apps, _: BaseDatabaseSchemaEditor) -> None:
    SpotifyAuth = apps.get_model("web", "SpotifyAuth")
    SpotifyAuth.objects.update(state=None, redirect_uri=None)


def encrypt_tokens(apps: Apps, _: BaseDatabaseSchemaEditor) -> None:
    SpotifyAuth = apps.get_model("web", "SpotifyAuth")

    for s in SpotifyAuth.objects.all():
        if s.access_token is not None:
            s.access_token = web.models.encrypt_value(s.access_token)

        if s.refresh_token is not None:
            s.refresh_token = web.models.encrypt_value(s.refresh_token)

        s.save()


class Migration(migrations.Migration):
    dependencies = [
        ("web", "0001_initial"),
    ]

    operations = [
        migrations.AlterField(
            model_name="spotifyauth",
            name="redirect_uri",
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name="spotifyauth",
            name="state",
            field=models.CharField(max_length=50, null=True, unique=True),
        ),
        migrations.RunPython(unset_state_and_redirect_uri),
        migrations.RunPython(encrypt_tokens),
        migrations.AlterField(
            model_name="spotifyauth",
            name="access_token",
            field=web.models.EncryptedCharField(max_length=450, null=True),
        ),
        migrations.AlterField(
            model_name="spotifyauth",
            name="refresh_token",
            field=web.models.EncryptedCharField(max_length=300, null=True),
        ),
    ]
